FrameQueue 帧队列操作
=====================
	struct FrameQueue {
		Frame queue[FRAME_QUEUE_SIZE];
		int rindex; //读取点
		int windex; //写入点
		int size;   //当前队列的尺寸
		int max_size; //队列的最大尺寸
		int keep_last; //defualt 1
		int rindex_shown; //?
		int eof;
		mutex_t *mutex;
		cond_t *cond;
		PacketQueue *pktq;
	};
	
	后<-->前
				rindex		windex
				 |			 |
				 V			 V
	queue-->|0|1|2|3|4|5|6|7|8|9|...|max_size-2|max_size-1|
FrameQueue 函数
	int frame_queue_init(FrameQueue *f, PacketQueue *pktq, int max_size, int keep_last)
		初始化帧队列
		
	Frame *frame_queue_peek(FrameQueue *f)
		取读取点的帧。
	Frame *frame_queue_peek_next(FrameQueue *f)
		取读取点的下一帧。
	Frame *frame_queue_peek_last(FrameQueue *f)
		取读取点的帧。
		
	Frame *frame_queue_peek_writable(FrameQueue *f,VideoState *is)
		如果队列满就等待，直到读出一帧腾出空间来，然后在写入点存放帧。
		
	Frame *frame_queue_peek_readable(FrameQueue *f)
		如果队列空就等待，直到有一个新的帧被写入，然后从读取点返回帧。
		
	void frame_queue_push(FrameQueue *f)
		写入点向前移动，如果到最后就置0，同时队列尺寸加1。(通知等待点，有帧可读了)
		
	void frame_queue_next(FrameQueue *f)
		读取点向前移动，如果到最后就置0，同时队列尺寸减1。(通知等待点，有空间可写了)
		
	int frame_queue_prev(FrameQueue *f)
		
	int64_t frame_queue_last_pos(FrameQueue *f)
	
使用:
	读取循环
		frame_queue_peek_readable
		frame_queue_next
	写入循环
		frame_queue_peek_writable
		frame_queue_push
		
PacketQueue 包队列		
==================