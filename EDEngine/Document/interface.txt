factory用来创建具体的对象
	createAsyn(uuid,notify,progress) 异步创建一个对象
		uuid要创建的对象id
		notify(obj,errmsg) 通过该函数通知创建是否成功,成功obj为创建的对象，errmsg等于nil.
			如果失败obj等于fales,errmsg是一个字符串描述错误信息。
		progress(d,txt) 创建过程的进度函数。d是一个0-1的数。txt是创建过程信息。
	import(uuids,notify,progress) 跟新表uuids中的全部对象
		uuids 是一个uuid表。
		notify(b,errmsg)  通过该函数通知输入是否成功,成功b为true，errmsg等于nil.
			如果失败b等于fales,errmsg是一个字符串描述错误信息。
		progress(d,txt) 输入过程的进度函数。d是一个0-1的数。txt是创建过程信息。
	create(uuid) 同步创建函数，如果创建对象并且返回。失败返回nil。
	isExist(uuid) 判断uuid的对象本地是否存在。（这是create创建成功的前提条件）

如果一个对象被创建出来，并且对象有方法__init__，那么方法__init__将被调用。

Root (7c3064bb858e619b9f02fef85432f162)
	getR(res) 取得资源res路径。
	isInstanceOf(classid) 判断classid是否在对象的继承链中,或者说是不是一个classid对象.
	test() 对象的测试代码。
	
Node () 父类:Root
	attach( ccnode ) 给对象附上一个cocos2d-x的节点
	ccCreate() 
		Node的子类必须实现此方法，并且必须调用attach为对象附上一个cocos2d-x节点
	init() 派生类可以定义自己的登场函数
	release()	 派生类定义自己的退场函数
	addChild(child) 加入一个子节点，可以是Layer对象，也可以是cocos2d-x的节点。
	ccNode() 返回附属cocos2d-x对象。
	getParent() 返回父节点
	getScene() 取得所在场景
	childs() 返回所有的子节点
	removeChild(child) 删除子节点数据(内部函数)
	removeFromParent(isdelay) 删除节点，isdelay=true延时删除
	setPosition(p) 设置位置点
	getPosition() 取得位置
	setAnchor(p) 设置锚点
	getAnchor() 取得锚点
	setSize(size) 设置节点尺寸
	getSize() 取节点尺寸
	setScale(scale) 设置缩放比例
	getScale() 取缩放比例
	setVisible(b) 设置可见度
	getVisible() 取可见度
	enable(b) 打开关闭触摸或鼠标输入
	isEnable() 判断当前是否被关闭输入
	scheduler(func,delta) 创建一个周期调度,delta周期时间.成功返回一个scheduler id
	removeScheduler(id) 删除周期调用,如果对象退场将自动清除全部调度
		例子1:obj:scheduler(function(t) return true end,0.2) --函数返回true表示继续重复调用
		例子2:obj:scheduler(function(t) return end)  --这相当与延时函数
	
Scene (d55f6d9cbb48b6f402b8122b97ed2dc1)父类:Root
	Scene的子类通过ccCreate来构造
	attach(ccobj) 附属一个cocos2d-x场景对象
	ccCreate() 创建cocos2d-x场景对象，在其中调用attach将cocos2d-x和本对象绑定
	ccScene() 返回cocos2d-x的场景对象。
	push() 将场景压入场景堆栈。展示该场景。
	pop() 将场景弹出。
	getSize() 取得设计视图的尺寸
	replace() 替换场景堆栈的栈顶。展示该场景。
	init() 事件函数，当场景展示时被调用。
	release() 事件函数，当场景退出时调用。
	childs() 返回场景中的全部子节点
	addChild(child,z) 加入一个子节点
	initDesignView(w,h,s) 设置设计视图的宽高和模式
	scheduler(func,delta) 创建一个周期调度,delta周期时间.成功返回一个scheduler id
	removeScheduler(id) 删除周期调用,如果对象退场将自动清除全部调度
		例子1:obj:scheduler(function(t) return true end,0.2) --函数返回true表示继续重复调用
		例子2:obj:scheduler(function(t) return end)  --这相当与延时函数
		
	
Layer (685316259b01edf58a85d6705a4541ad)父类:Node
	addChild(child) 加入一个子节点，可以是Widget对象，也可以是cocos2d-x的节点。
	ccLayer() 返回cocos2d-x的层对象。
	init() 事件函数，当场景展示时被调用。
	release() 事件函数，当场景退出时调用。
	
Dialog (f9e6338b892d9da54fc0668d5f1bd19c)父类:Root
	open(t) 打开对话栏界面。
	close() 关闭对话栏。
	modal(widget,cancel) 模式对话栏。
		widget 要展示的界面元件
		cancel 如果为true当点击到widget外面将自动关闭widget
	
MessageBox (8736daf38faaa28693f922843cc0c5aa)父类:Dialog
	open(t) 打开一个对话框。t有如下的项。
		caption 标题必须是一个字符串
		text 正文可以是一个字符串，也可以是一个字符数组{"line1","line2"}
		button 按钮数组,{"OK","Cancel"}或者也可以是一个整数1代表{"确定"}
			2代表{"确定","取消"},3代表{"确定","取消","重试"}
		onClick(index,button) 点击事件，当消息栏的按钮被按下时。
			index :button中的索引
			button:button中的文字
	
LoadingScene (8bb51443e440190b892996b8c2864672)父类:Scene
	setProgress(d) 设置进度，d是一个0-1的数。
	setText(txt) 加载中间过程的提示文本。
	
SplashScene (b50a67aa2ed2183bee9b804ce7dbdefd)父类:Scene
	close() 关闭Splash界面。
	setText(txt) 加载中间过程的提示文本。
	
Spin (b34d6d7a5652cf3bbe6388d5770dbe95)父类:Dialog
	open() 在屏幕的中间显示一个旋转的圈。
	close() 关闭Spin
	
ProgressBox (6e8c7a6612998e78186585e468010f95)父类:Dialog
	open(t) 打开一个具有进度条的对话栏。t有如下的项。
		caption 标题
	close() 关闭对话栏。
	setProgress(d) 设置进度，d是一个0-1的数。
	setText(txt) 加载中间过程的提示文本。
	
Item () super:Node
	actions() 返回对象能做的全部动作
	currentAction() 返回当前动作名称
	doAction(name) 做动作 
	reset() 做默认动作
	addAction(action) 加入一个动作action是一个表
		{
			default, 默认动作
			animations={ 动画文件
			},
			actions={
				{
				name,动作名称
				animation,动画名称
				animationName,动画名称
				animationIndex,动画索引
				image,图片名称(和动画二选一)
				audio,动作音效
				audioDelay,音效延迟时间(默认0)
				offset,动作开始时空间偏移位置(默认0,0)
				scale,动作开始时缩放(默认1)
				angle,动作开始时角度偏移(默认0)
				script,动作脚本可以是一个函数
				loop,循环动作(这是一个周期的时间)
				}
			}
		}
		没有对代码也可以提供一个actions.json来描述对象
	
ParallaxNode super:Node
	一种根据某种模式反复出现的无限场景
	对象没有大小（无限大小）
	{
		patterns=[
			{
			offset,偏移默认(0,0)
			scale,缩放默认(1,1)
			angle,角度默认(0)
			mirror,镜像
			anchor,锚点默认值为(0,0)
			strip, 一个循环的宽度,必须有该值。(每隔strip宽度放置一个对象)
			image, 图像资源
			}
		]
	}
ParallaxLayer super:Node
	用来管理多个视察节点
	